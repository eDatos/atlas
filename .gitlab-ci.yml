variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# This template uses jdk8 for verifying and deploying images
image: maven:3.3.9-jdk-8

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

stages:
    - build
    - release   
    - demo
    - pre
    - pro

build:
    stage: build
    tags: ["build"]
    script:
        - 'mvn $MAVEN_CLI_OPTS deploy -s /tmp/settings.xml '
    artifacts:
        paths:
            - target/*.jar
    only:
      - develop

release:
    stage: release
    tags: ["build"]
    script:
      - git config --global user.email "sistemas@arte-consultores.com"
      - git config --global user.name "arte"
      - git checkout -B "$CI_BUILD_REF_NAME"
      - if [[ -n "$RELEASE_VERSION" ]] ;
        then
          mvn -DreleaseVersion=$RELEASE_VERSION -Dresume=false release:prepare release:perform -Dusername=arte -Dpassword=$ARTEPASS -s /tmp/settings.xml ;
        else
          mvn -Dresume=false release:prepare release:perform -Dusername=arte -Dpassword=$ARTEPASS -s /tmp/settings.xml ;
        fi
    artifacts:
      paths:
      - target/*.jar
    only:
      - master
    when: manual

# ######################################################################################
# DEMO
# ###################################################################################### 
demo deploy:
    stage: demo
    script:
        - bash ./etc/deploy/scripts/demo/deploy.sh
    when: manual

# ######################################################################################
# PRE
# ######################################################################################
.job_template: &pre_job_definition
    image: anaga:5000/vpn_globalprotect:1.1.0
    stage: pre
    only:
        - master
    tags: ["deploy-vpn"]
    when: manual
    before_script:
        - bash -c "echo '$PASSWORD' | openconnect -b --protocol=gp -c /mnt/$CERT evpn.gobiernodecanarias.org --user=$USER_VPN --key-password=$KEY_PW -i tun1 --no-proxy --disable-ipv6 --no-dtls --servercert pin-sha256:tzz6HX+uCVdZMTV1KbUZVNIMwqUSdJLh5P4r0WtFULY= --csd-wrapper=/root/hipreport.sh && sleep 5"

pre check server status:
    <<: *pre_job_definition
    script:
        - ssh -o "StrictHostKeyChecking=no" deploy@mgcartera.gobiernodecanarias.net echo 'ok'
    
pre deploy:
    <<: *pre_job_definition
    script:
        - bash ./etc/deploy/scripts/pre/deploy.sh
    dependencies:
        - release

# ######################################################################################
# PRO
# ######################################################################################
.job_template: &pro_job_definition
    image: anaga:5000/vpn_globalprotect:1.1.0
    stage: pro
    only:
        - master
    tags: ["deploy-vpn"]
    when: manual
    before_script:
        - bash -c "echo '$PASSWORD' | openconnect -b --protocol=gp -c /mnt/$CERT evpn.gobiernodecanarias.org --user=$USER_VPN --key-password=$KEY_PW -i tun1 --no-proxy --disable-ipv6 --no-dtls --servercert pin-sha256:tzz6HX+uCVdZMTV1KbUZVNIMwqUSdJLh5P4r0WtFULY= --csd-wrapper=/root/hipreport.sh && sleep 5"

pro check server status:
    <<: *pro_job_definition
    script:
        - ssh -o "StrictHostKeyChecking=no" deploy@mgcrinaco.gobiernodecanarias.net echo 'ok'
    
pro deploy:
    <<: *pro_job_definition
    script:
        - bash ./etc/deploy/scripts/pro/deploy.sh
    dependencies:
        - release

